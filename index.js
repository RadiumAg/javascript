
let datas = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];
let history_datas = [
    [1, 4, 5, 7, 10, 14, 16, 20, 25, 26, 28],
    [3, 5, 8, 10, 13, 14, 15, 18, 20, 23, 25, 28, 30],
    [1, 3, 4, 6, 7, 10, 11, 15, 18, 19, 20, 23, 24, 26],
    [3, 4, 5, 11, 12, 15, 19, 20, 21, 24],
    [1, 6, 7, 10, 12, 16, 22, 23, 24, 27, 29],
    [7, 8, 12, 14, 1, 19, 20, 22, 23, 25, 26, 29],
    [1, 2, 4, 5, 6, 7, 9, 16, 18, 21, 25, 26, 29, 30],
    [1, 2, 5, 11, 15, 16, 18, 21, 24, 25, 29, 30],
    [1, 12, 14, 15, 16, 17, 18, 21, 23, 27, 28, 30],
    [1, 12, 14, 15, 16, 17, 18, 21, 23, 27, 28],
    [1, 4, 5, 7, 10, 14, 16, 20, 25, 26, 28, 29],
    [4, 5, 6, 7, 10, 15, 21, 25, 29],
    [1, 7, 9, 12, 13, 19, 22, 23, 24, 28],
    [4, 6, 8, 10, 11, 14, 16, 17, 21, 24, 25, 30]
    [3, 5, 6, 10, 12, 16, 18, 19, 27, 30]
]

let combinationAns = [];
combination(datas, 0, 6, 0, [], combinationAns);
console.log(combinationAns);



function combination(nums, d, targetLength, curIdx, curr, ans) {
    if (d === targetLength) {
        ans.push([...curr]);
        return;
    }
    for (let i = curIdx; i < nums.length; i++) {
        curr.push(nums[i]);
        combination(nums, d + 1, targetLength, i + 1, curr, ans);
        curr.pop();
    }
}
